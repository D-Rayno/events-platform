# ============================================
# Docker Compose Configuration
# For local development and testing
# ============================================

services:
  # ============================================
  # MySQL Database
  # ============================================
  db:
    image: mysql:8.0
    container_name: g-agency-events-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: events_platform
      MYSQL_USER: g_agency
      MYSQL_PASSWORD: secure_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password

  # ============================================
  # Typesense Search Engine
  # ============================================
  typesense:
    image: typesense/typesense:27.1
    container_name: g-agency-events-typesense
    restart: unless-stopped
    environment:
      TYPESENSE_API_KEY: XW2pN1Ybe7wjRgZ8bB8cno+oAEN1ddAIEcviVrRZ4gU=
      TYPESENSE_DATA_DIR: /data
    ports:
      - "8108:8108"
    volumes:
      - typesense_data:/data
    networks:
      - app-network
    # No healthcheck - Typesense starts fast enough
    # App will handle connection retries

  # ============================================
  # AdonisJS Application
  # ============================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: g-agency-events-app
    restart: unless-stopped
    ports:
      - "3333:10000"
    env_file:
      - .env.docker
    volumes:
      # Persist uploads
      - ./public/uploads:/app/public/uploads
      # Persist logs
      - ./logs:/app/logs
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
      typesense:
        condition: service_started  # Just wait for start, not health
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:10000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

# ============================================
# Networks
# ============================================
networks:
  app-network:
    driver: bridge

# ============================================
# Volumes
# ============================================
volumes:
  mysql_data:
    driver: local
  typesense_data:
    driver: local